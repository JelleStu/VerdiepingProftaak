<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>